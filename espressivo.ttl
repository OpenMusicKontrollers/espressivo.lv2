# Copyright (c) 2015 Hanspeter Portner (dev@open-music-kontrollers.ch)
#
# This is free software: you can redistribute it and/or modify
# it under the terms of the Artistic License 2.0 as published by
# The Perl Foundation.
#
# This source is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# Artistic License 2.0 for more details.
#
# You should have received a copy of the Artistic License 2.0
# along the source as a COPYING file. If not, obtain it from
# http://www.perlfoundation.org/artistic_license_2_0.

@prefix owl:	<http://www.w3.org/2002/07/owl#> .
@prefix foaf:	<http://xmlns.com/foaf/0.1/> .
@prefix doap:	<http://usefulinc.com/ns/doap#> .
@prefix rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix lv2:	<http://lv2plug.in/ns/lv2core#> .
@prefix rsz:  <http://lv2plug.in/ns/ext/resize-port#> .
@prefix atom:	<http://lv2plug.in/ns/ext/atom#> .
@prefix midi:	<http://lv2plug.in/ns/ext/midi#> .
@prefix work: <http://lv2plug.in/ns/ext/worker#> .
@prefix urid: <http://lv2plug.in/ns/ext/urid#> .
@prefix state: <http://lv2plug.in/ns/ext/state#> .
@prefix patch: <http://lv2plug.in/ns/ext/patch#> .
@prefix log:	<http://lv2plug.in/ns/ext/log#> .
@prefix units: <http://lv2plug.in/ns/extensions/units#> .

@prefix lic:	<http://opensource.org/licenses/> .
@prefix omk:	<http://open-music-kontrollers.ch/ventosus#> .
@prefix proj:	<http://open-music-kontrollers.ch/lv2/> .
@prefix esp:	<http://open-music-kontrollers.ch/lv2/espressivo#> .
@prefix osc:	<http://open-music-kontrollers.ch/lv2/osc#> .

osc:schedule
	a lv2:Feature .

osc:Event
	a rdfs:Class ,
		rdfs:Datatype ;
	rdfs:label "OSC Event" ;
	rdfs:subClassOf atom:Atom .

# Maintainer
omk:me
	a foaf:Person ;
	foaf:name "Hanspeter Portner" ;
	foaf:mbox <mailto:dev@open-music-kontrollers.ch> ;
	foaf:homepage <http://open-music-kontrollers.ch> .

# Project
proj:espressivo
	a doap:Project ;
	doap:maintainer omk:me ;
	doap:name "Espressivo Bundle" .

esp:mpe_zones
	a lv2:Parameter ;
	rdfs:label "Zones" ;
	rdfs:range atom:Int ;
	lv2:minimum 1 ;
	lv2:maximum 8 .

esp:mpe_master_range_1
	a lv2:Parameter ;
	rdfs:label "Master Bend Range 1" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .

esp:mpe_master_range_2
	a lv2:Parameter ;
	rdfs:label "Master Bend Range 2" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .

esp:mpe_master_range_3
	a lv2:Parameter ;
	rdfs:label "Master Bend Range 3" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .

esp:mpe_master_range_4
	a lv2:Parameter ;
	rdfs:label "Master Bend Range 4" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .

esp:mpe_master_range_5
	a lv2:Parameter ;
	rdfs:label "Master Bend Range 5" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .

esp:mpe_master_range_6
	a lv2:Parameter ;
	rdfs:label "Master Bend Range 6" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .

esp:mpe_master_range_7
	a lv2:Parameter ;
	rdfs:label "Master Bend Range 7" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .

esp:mpe_master_range_8
	a lv2:Parameter ;
	rdfs:label "Master Bend Range 8" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .

esp:mpe_voice_range_1
	a lv2:Parameter ;
	rdfs:label "Voice Bend Range 1" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .

esp:mpe_voice_range_2
	a lv2:Parameter ;
	rdfs:label "Voice Bend Range 2" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .

esp:mpe_voice_range_3
	a lv2:Parameter ;
	rdfs:label "Voice Bend Range 3" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .

esp:mpe_voice_range_4
	a lv2:Parameter ;
	rdfs:label "Voice Bend Range 4" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .

esp:mpe_voice_range_5
	a lv2:Parameter ;
	rdfs:label "Voice Bend Range 5" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .

esp:mpe_voice_range_6
	a lv2:Parameter ;
	rdfs:label "Voice Bend Range 6" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .

esp:mpe_voice_range_7
	a lv2:Parameter ;
	rdfs:label "Voice Bend Range 7" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .

esp:mpe_voice_range_8
	a lv2:Parameter ;
	rdfs:label "Voice Bend Range 8" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .

# MPE Output Plugin
esp:mpe_out
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Espressivo MPE Out" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:espressivo ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable ;
	lv2:requiredFeature urid:map, state:loadDefaultState ;
	lv2:extensionData state:interface ;

	lv2:port [
	# input event port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		atom:supports patch:Message ;
		lv2:index 0 ;
		lv2:symbol "event_in" ;
		lv2:name "Event Input" ;
		lv2:designation lv2:control ;
	] , [
	# output midi port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		atom:supports patch:Message ;
		lv2:index 1 ;
		lv2:symbol "midi_out" ;
		lv2:name "MIDI Output" ;
		lv2:designation lv2:control ;
	] ;

	patch:writable esp:mpe_zones ;

	patch:writable esp:mpe_master_range_1 ;
	patch:writable esp:mpe_master_range_2 ;
	patch:writable esp:mpe_master_range_3 ;
	patch:writable esp:mpe_master_range_4 ;
	patch:writable esp:mpe_master_range_5 ;
	patch:writable esp:mpe_master_range_6 ;
	patch:writable esp:mpe_master_range_7 ;
	patch:writable esp:mpe_master_range_8 ;

	patch:writable esp:mpe_voice_range_1 ;
	patch:writable esp:mpe_voice_range_2 ;
	patch:writable esp:mpe_voice_range_3 ;
	patch:writable esp:mpe_voice_range_4 ;
	patch:writable esp:mpe_voice_range_5 ;
	patch:writable esp:mpe_voice_range_6 ;
	patch:writable esp:mpe_voice_range_7 ;
	patch:writable esp:mpe_voice_range_8 ;
	
	state:state [
		esp:mpe_zones 1 ;

		esp:mpe_master_range_1 2 ;	
		esp:mpe_master_range_2 2 ;	
		esp:mpe_master_range_3 2 ;	
		esp:mpe_master_range_4 2 ;	
		esp:mpe_master_range_5 2 ;	
		esp:mpe_master_range_6 2 ;	
		esp:mpe_master_range_7 2 ;	
		esp:mpe_master_range_8 2 ;	

		esp:mpe_voice_range_1 48 ;	
		esp:mpe_voice_range_2 48 ;	
		esp:mpe_voice_range_3 48 ;	
		esp:mpe_voice_range_4 48 ;	
		esp:mpe_voice_range_5 48 ;	
		esp:mpe_voice_range_6 48 ;	
		esp:mpe_voice_range_7 48 ;	
		esp:mpe_voice_range_8 48 ;	
	] .

esp:tuio2_deviceWidth
	a lv2:Parameter ;
	rdfs:label "Device width" ;
	rdfs:range atom:Int ;
	lv2:minimum 1 ;
	lv2:maximum 65535 .

esp:tuio2_deviceHeight
	a lv2:Parameter ;
	rdfs:label "Device height" ;
	rdfs:range atom:Int ;
	lv2:minimum 1 ;
	lv2:maximum 65535 .

esp:tuio2_deviceName
	a lv2:Parameter ;
	rdfs:label "Device name" ;
	rdfs:range atom:String .

esp:tuio2_octave
	a lv2:Parameter ;
	rdfs:label "Octave" ;
	rdfs:range atom:Int ;
	units:unit units:oct ;
	lv2:minimum 0 ;
	lv2:maximum 8 .

esp:tuio2_sensorsPerSemitone
	a lv2:Parameter ;
	rdfs:label "Sensors per Semitone" ;
	rdfs:range atom:Int ;
	lv2:minimum 1 ;
	lv2:maximum 160 .

# TUIO2 Input Plugin
esp:tuio2_in
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Espressivo TUIO2 In" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:espressivo ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable, log:log ;
	lv2:requiredFeature urid:map, state:loadDefaultState ;
	lv2:extensionData state:interface ;

	lv2:port [
	# input event port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		atom:supports osc:Event ;
		atom:supports patch:Message ;
		lv2:index 0 ;
		lv2:symbol "osc_in" ;
		lv2:name "OSC Input" ;
		lv2:designation lv2:control ;
	] , [
	# output event port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		atom:supports patch:Message ;
		lv2:index 1 ;
		lv2:symbol "event_out" ;
		lv2:name "Event Output" ;
		lv2:designation lv2:control ;
	] ;

	patch:readable esp:tuio2_deviceWidth ;
	patch:readable esp:tuio2_deviceHeight ;
	patch:readable esp:tuio2_deviceName ;

	patch:writable esp:tuio2_octave ;
	patch:writable esp:tuio2_sensorsPerSemitone ;
	
	state:state [
		esp:tuio2_octave 2 ;
		esp:tuio2_sensorsPerSemitone 3 ;	
	] .

esp:snh_sample
	a lv2:Parameter ;
	rdfs:label "Sample" ;
	rdfs:range atom:Bool .

# Sample and Hold Filter Plugin
esp:snh
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Espressivo Sample and Hold" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:espressivo ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable, log:log ;
	lv2:requiredFeature urid:map, state:loadDefaultState ;
	lv2:extensionData state:interface ;

	lv2:port [
	# input event port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		atom:supports patch:Message ;
		lv2:index 0 ;
		lv2:symbol "event_in" ;
		lv2:name "Event Input" ;
		lv2:designation lv2:control ;
	] , [
	# output event port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		atom:supports patch:Message ;
		lv2:index 1 ;
		lv2:symbol "event_out" ;
		lv2:name "Event Output" ;
		lv2:designation lv2:control ;
	] ;

	patch:writable esp:snh_sample ;
	
	state:state [
		esp:snh_sample false ;
	] .
