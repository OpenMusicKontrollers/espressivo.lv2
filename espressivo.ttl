# Copyright (c) 2015 Hanspeter Portner (dev@open-music-kontrollers.ch)
#
# This is free software: you can redistribute it and/or modify
# it under the terms of the Artistic License 2.0 as published by
# The Perl Foundation.
#
# This source is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# Artistic License 2.0 for more details.
#
# You should have received a copy of the Artistic License 2.0
# along the source as a COPYING file. If not, obtain it from
# http://www.perlfoundation.org/artistic_license_2_0.

@prefix owl:	<http://www.w3.org/2002/07/owl#> .
@prefix foaf:	<http://xmlns.com/foaf/0.1/> .
@prefix doap:	<http://usefulinc.com/ns/doap#> .
@prefix rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:	<http://www.w3.org/2001/XMLSchema#> .
@prefix lv2:	<http://lv2plug.in/ns/lv2core#> .
@prefix rsz:  <http://lv2plug.in/ns/ext/resize-port#> .
@prefix atom:	<http://lv2plug.in/ns/ext/atom#> .
@prefix midi:	<http://lv2plug.in/ns/ext/midi#> .
@prefix urid: <http://lv2plug.in/ns/ext/urid#> .
@prefix state: <http://lv2plug.in/ns/ext/state#> .
@prefix patch: <http://lv2plug.in/ns/ext/patch#> .
@prefix log:	<http://lv2plug.in/ns/ext/log#> .
@prefix units: <http://lv2plug.in/ns/extensions/units#> .

@prefix lic:	<http://opensource.org/licenses/> .
@prefix omk:	<http://open-music-kontrollers.ch/ventosus#> .
@prefix proj:	<http://open-music-kontrollers.ch/lv2/> .
@prefix esp:	<http://open-music-kontrollers.ch/lv2/espressivo#> .
@prefix osc:	<http://open-music-kontrollers.ch/lv2/osc#> .
@prefix xpress:	<http://open-music-kontrollers.ch/lv2/xpress#> .

osc:schedule
	a lv2:Feature .

osc:Event
	a rdfs:Class ,
		rdfs:Datatype ;
	rdfs:label "OSC Event" ;
	rdfs:subClassOf atom:Atom .

lv2:parameterProperty
	a rdf:Property ,
		owl:ObjectProperty ;
	rdfs:domain lv2:Parameter ;
	rdfs:range lv2:PortProperty ;
	rdfs:label "parameter property" ;
	rdfs:comment """Relates Parameters to PortProperties. The PortProperty may be ignored without catastrophic effects, though it may be useful e.g. for providing a sensible interface for the parameter.""" .

lv2:isBitmask
	a lv2:PortProperty ;
	rdfs:label "bitmask" .

xpress:voiceMap
	a lv2:Feature .

xpress:Message
	a rdfs:Class ,
		rdfs:Datatype ;
	rdfs:subClassOf atom:Atom .

units:midiController
	a units:Unit ;
	rdfs:label "MIDI controller" ;
	units:render "MIDI controller %d" ;
	units:symbol "controller" .

# Maintainer
omk:me
	a foaf:Person ;
	foaf:name "Hanspeter Portner" ;
	foaf:mbox <mailto:dev@open-music-kontrollers.ch> ;
	foaf:homepage <http://open-music-kontrollers.ch> .

# Project
proj:espressivo
	a doap:Project ;
	doap:maintainer omk:me ;
	doap:name "Espressivo Bundle" .

esp:mpe_zones
	a lv2:Parameter ;
	rdfs:label "Zones" ;
	rdfs:comment "number of zones" ;
	rdfs:range atom:Int ;
	lv2:minimum 1 ;
	lv2:maximum 8 .

esp:mpe_velocity
	a lv2:Parameter ;
	rdfs:label "Velocity" ;
	rdfs:comment "set MIDI velocity" ;
	rdfs:range atom:Int ;
	lv2:minimum 0 ;
	lv2:maximum 127 .

esp:mpe_master_range_1
	a lv2:Parameter ;
	rdfs:label "Master Bend Range 1" ;
	rdfs:comment "master MIDI bend range for zone 1" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .
esp:mpe_master_range_2
	a lv2:Parameter ;
	rdfs:label "Master Bend Range 2" ;
	rdfs:comment "master MIDI bend range for zone 2" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .
esp:mpe_master_range_3
	a lv2:Parameter ;
	rdfs:label "Master Bend Range 3" ;
	rdfs:comment "master MIDI bend range for zone 3" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .
esp:mpe_master_range_4
	a lv2:Parameter ;
	rdfs:label "Master Bend Range 4" ;
	rdfs:comment "master MIDI bend range for zone 4" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .
esp:mpe_master_range_5
	a lv2:Parameter ;
	rdfs:label "Master Bend Range 5" ;
	rdfs:comment "master MIDI bend range for zone 5" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .
esp:mpe_master_range_6
	a lv2:Parameter ;
	rdfs:label "Master Bend Range 6" ;
	rdfs:comment "master MIDI bend range for zone 6" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .
esp:mpe_master_range_7
	a lv2:Parameter ;
	rdfs:label "Master Bend Range 7" ;
	rdfs:comment "master MIDI bend range for zone 7" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .
esp:mpe_master_range_8
	a lv2:Parameter ;
	rdfs:label "Master Bend Range 8" ;
	rdfs:comment "master MIDI bend range for zone 8" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .

esp:mpe_voice_range_1
	a lv2:Parameter ;
	rdfs:label "Voice Bend Range 1" ;
	rdfs:comment "voice MIDI bend range for zone 1" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .
esp:mpe_voice_range_2
	a lv2:Parameter ;
	rdfs:label "Voice Bend Range 2" ;
	rdfs:comment "voice MIDI bend range for zone 2" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .
esp:mpe_voice_range_3
	a lv2:Parameter ;
	rdfs:label "Voice Bend Range 3" ;
	rdfs:comment "voice MIDI bend range for zone 3" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .
esp:mpe_voice_range_4
	a lv2:Parameter ;
	rdfs:label "Voice Bend Range 4" ;
	rdfs:comment "voice MIDI bend range for zone 4" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .
esp:mpe_voice_range_5
	a lv2:Parameter ;
	rdfs:label "Voice Bend Range 5" ;
	rdfs:comment "voice MIDI bend range for zone 5" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .
esp:mpe_voice_range_6
	a lv2:Parameter ;
	rdfs:label "Voice Bend Range 6" ;
	rdfs:comment "voice MIDI bend range for zone 6" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .
esp:mpe_voice_range_7
	a lv2:Parameter ;
	rdfs:label "Voice Bend Range 7" ;
	rdfs:comment "voice MIDI bend range for zone 7" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .
esp:mpe_voice_range_8
	a lv2:Parameter ;
	rdfs:label "Voice Bend Range 8" ;
	rdfs:comment "voice MIDI bend range for zone 8" ;
	rdfs:range atom:Int ;
	units:unit units:semitone12TET ;
	lv2:minimum 1 ;
	lv2:maximum 96 .

esp:mpe_pressure_controller_1
	a lv2:Parameter ;
	rdfs:label "Pressure Controller 1" ;
	rdfs:comment "MIDI controller to use as voice pressure for zone 1" ;
	rdfs:range atom:Int ;
	units:unit units:midiController ;
	lv2:minimum 0 ;
	lv2:maximum 127 .
esp:mpe_pressure_controller_2
	a lv2:Parameter ;
	rdfs:label "Pressure Controller 2" ;
	rdfs:comment "MIDI controller to use as voice pressure for zone 2" ;
	rdfs:range atom:Int ;
	units:unit units:midiController ;
	lv2:minimum 0 ;
	lv2:maximum 127 .
esp:mpe_pressure_controller_3
	a lv2:Parameter ;
	rdfs:label "Pressure Controller 3" ;
	rdfs:comment "MIDI controller to use as voice pressure for zone 3" ;
	rdfs:range atom:Int ;
	units:unit units:midiController ;
	lv2:minimum 0 ;
	lv2:maximum 127 .
esp:mpe_pressure_controller_4
	a lv2:Parameter ;
	rdfs:label "Pressure Controller 4" ;
	rdfs:comment "MIDI controller to use as voice pressure for zone 4" ;
	rdfs:range atom:Int ;
	units:unit units:midiController ;
	lv2:minimum 0 ;
	lv2:maximum 127 .
esp:mpe_pressure_controller_5
	a lv2:Parameter ;
	rdfs:label "Pressure Controller 5" ;
	rdfs:comment "MIDI controller to use as voice pressure for zone 5" ;
	rdfs:range atom:Int ;
	units:unit units:midiController ;
	lv2:minimum 0 ;
	lv2:maximum 127 .
esp:mpe_pressure_controller_6
	a lv2:Parameter ;
	rdfs:label "Pressure Controller 6" ;
	rdfs:comment "MIDI controller to use as voice pressure for zone 6" ;
	rdfs:range atom:Int ;
	units:unit units:midiController ;
	lv2:minimum 0 ;
	lv2:maximum 127 .
esp:mpe_pressure_controller_7
	a lv2:Parameter ;
	rdfs:label "Pressure Controller 7" ;
	rdfs:comment "MIDI controller to use as voice pressure for zone 7" ;
	rdfs:range atom:Int ;
	units:unit units:midiController ;
	lv2:minimum 0 ;
	lv2:maximum 127 .
esp:mpe_pressure_controller_8
	a lv2:Parameter ;
	rdfs:label "Pressure Controller 8" ;
	rdfs:comment "MIDI controller to use as voice pressure for zone 8" ;
	rdfs:range atom:Int ;
	units:unit units:midiController ;
	lv2:minimum 0 ;
	lv2:maximum 127 .

esp:mpe_timbre_controller_1
	a lv2:Parameter ;
	rdfs:label "Timbre Controller 1" ;
	rdfs:comment "MIDI controller to use as voice timbre for zone 1" ;
	rdfs:range atom:Int ;
	units:unit units:midiController ;
	lv2:minimum 0 ;
	lv2:maximum 127 .
esp:mpe_timbre_controller_2
	a lv2:Parameter ;
	rdfs:label "Timbre Controller 2" ;
	rdfs:comment "MIDI controller to use as voice timbre for zone 2" ;
	rdfs:range atom:Int ;
	units:unit units:midiController ;
	lv2:minimum 0 ;
	lv2:maximum 127 .
esp:mpe_timbre_controller_3
	a lv2:Parameter ;
	rdfs:label "Timbre Controller 3" ;
	rdfs:comment "MIDI controller to use as voice timbre for zone 3" ;
	rdfs:range atom:Int ;
	units:unit units:midiController ;
	lv2:minimum 0 ;
	lv2:maximum 127 .
esp:mpe_timbre_controller_4
	a lv2:Parameter ;
	rdfs:label "Timbre Controller 4" ;
	rdfs:comment "MIDI controller to use as voice timbre for zone 4" ;
	rdfs:range atom:Int ;
	units:unit units:midiController ;
	lv2:minimum 0 ;
	lv2:maximum 127 .
esp:mpe_timbre_controller_5
	a lv2:Parameter ;
	rdfs:label "Timbre Controller 5" ;
	rdfs:comment "MIDI controller to use as voice timbre for zone 5" ;
	rdfs:range atom:Int ;
	units:unit units:midiController ;
	lv2:minimum 0 ;
	lv2:maximum 127 .
esp:mpe_timbre_controller_6
	a lv2:Parameter ;
	rdfs:label "Timbre Controller 6" ;
	rdfs:comment "MIDI controller to use as voice timbre for zone 6" ;
	rdfs:range atom:Int ;
	units:unit units:midiController ;
	lv2:minimum 0 ;
	lv2:maximum 127 .
esp:mpe_timbre_controller_7
	a lv2:Parameter ;
	rdfs:label "Timbre Controller 7" ;
	rdfs:comment "MIDI controller to use as voice timbre for zone 7" ;
	rdfs:range atom:Int ;
	units:unit units:midiController ;
	lv2:minimum 0 ;
	lv2:maximum 127 .
esp:mpe_timbre_controller_8
	a lv2:Parameter ;
	rdfs:label "Timbre Controller 8" ;
	rdfs:comment "MIDI controller to use as voice timbre for zone 8" ;
	rdfs:range atom:Int ;
	units:unit units:midiController ;
	lv2:minimum 0 ;
	lv2:maximum 127 .

# MPE Output Plugin
esp:mpe_out
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Espressivo MPE Out" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:espressivo ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable, xpress:voiceMap, state:threadSafeRestore ;
	lv2:requiredFeature urid:map, state:loadDefaultState ;
	lv2:extensionData state:interface ;

	lv2:port [
	# input event port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports xpress:Message, patch:Message ;
		lv2:index 0 ;
		lv2:symbol "event_in" ;
		lv2:name "Event Input" ;
		lv2:designation lv2:control ;
	] , [
	# output midi port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent, patch:Message ;
		lv2:index 1 ;
		lv2:symbol "midi_out" ;
		lv2:name "MIDI Output" ;
		lv2:designation lv2:control ;
	] ;

	patch:writable
		esp:mpe_zones ,
		esp:mpe_velocity ,
		esp:mpe_master_range_1 ,
		esp:mpe_master_range_2 ,
		esp:mpe_master_range_3 ,
		esp:mpe_master_range_4 ,
		esp:mpe_master_range_5 ,
		esp:mpe_master_range_6 ,
		esp:mpe_master_range_7 ,
		esp:mpe_master_range_8 ,
		esp:mpe_voice_range_1 ,
		esp:mpe_voice_range_2 ,
		esp:mpe_voice_range_3 ,
		esp:mpe_voice_range_4 ,
		esp:mpe_voice_range_5 ,
		esp:mpe_voice_range_6 ,
		esp:mpe_voice_range_7 ,
		esp:mpe_voice_range_8 ,
		esp:mpe_pressure_controller_1 ,
		esp:mpe_pressure_controller_2 ,
		esp:mpe_pressure_controller_3 ,
		esp:mpe_pressure_controller_4 ,
		esp:mpe_pressure_controller_5 ,
		esp:mpe_pressure_controller_6 ,
		esp:mpe_pressure_controller_7 ,
		esp:mpe_pressure_controller_8 ,
		esp:mpe_timbre_controller_1 ,
		esp:mpe_timbre_controller_2 ,
		esp:mpe_timbre_controller_3 ,
		esp:mpe_timbre_controller_4 ,
		esp:mpe_timbre_controller_5 ,
		esp:mpe_timbre_controller_6 ,
		esp:mpe_timbre_controller_7 ,
		esp:mpe_timbre_controller_8 ;
	
	state:state [
		esp:mpe_zones 1 ;
		esp:mpe_velocity 64 ;
		esp:mpe_master_range_1 2 ;	
		esp:mpe_master_range_2 2 ;	
		esp:mpe_master_range_3 2 ;	
		esp:mpe_master_range_4 2 ;	
		esp:mpe_master_range_5 2 ;	
		esp:mpe_master_range_6 2 ;	
		esp:mpe_master_range_7 2 ;	
		esp:mpe_master_range_8 2 ;	
		esp:mpe_voice_range_1 48 ;	
		esp:mpe_voice_range_2 48 ;	
		esp:mpe_voice_range_3 48 ;	
		esp:mpe_voice_range_4 48 ;	
		esp:mpe_voice_range_5 48 ;	
		esp:mpe_voice_range_6 48 ;	
		esp:mpe_voice_range_7 48 ;	
		esp:mpe_voice_range_8 48 ;	
		esp:mpe_pressure_controller_1 70 ;	
		esp:mpe_pressure_controller_2 70 ;	
		esp:mpe_pressure_controller_3 70 ;	
		esp:mpe_pressure_controller_4 70 ;	
		esp:mpe_pressure_controller_5 70 ;	
		esp:mpe_pressure_controller_6 70 ;	
		esp:mpe_pressure_controller_7 70 ;	
		esp:mpe_pressure_controller_8 70 ;	
		esp:mpe_timbre_controller_1 74 ;	
		esp:mpe_timbre_controller_2 74 ;	
		esp:mpe_timbre_controller_3 74 ;	
		esp:mpe_timbre_controller_4 74 ;	
		esp:mpe_timbre_controller_5 74 ;	
		esp:mpe_timbre_controller_6 74 ;	
		esp:mpe_timbre_controller_7 74 ;	
		esp:mpe_timbre_controller_8 74 ;	
	] .

# MPE Input Plugin
esp:mpe_in
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Espressivo MPE In" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:espressivo ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable, xpress:voiceMap, state:threadSafeRestore ;
	lv2:requiredFeature urid:map, state:loadDefaultState ;
	lv2:extensionData state:interface ;

	lv2:port [
	# input event port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent, patch:Message ;
		lv2:index 0 ;
		lv2:symbol "event_in" ;
		lv2:name "Event Input" ;
		lv2:designation lv2:control ;
	] , [
	# output midi port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports xpress:Message, patch:Message ;
		lv2:index 1 ;
		lv2:symbol "midi_out" ;
		lv2:name "MIDI Output" ;
		lv2:designation lv2:control ;
	] ;

	patch:readable
		esp:mpe_zones ,
		esp:mpe_master_range_1 ,
		esp:mpe_master_range_2 ,
		esp:mpe_master_range_3 ,
		esp:mpe_master_range_4 ,
		esp:mpe_master_range_5 ,
		esp:mpe_master_range_6 ,
		esp:mpe_master_range_7 ,
		esp:mpe_master_range_8 ,
		esp:mpe_voice_range_1 ,
		esp:mpe_voice_range_2 ,
		esp:mpe_voice_range_3 ,
		esp:mpe_voice_range_4 ,
		esp:mpe_voice_range_5 ,
		esp:mpe_voice_range_6 ,
		esp:mpe_voice_range_7 ,
		esp:mpe_voice_range_8 ;

	state:state [
	] .

esp:tuio2_deviceWidth
	a lv2:Parameter ;
	rdfs:label "Device width" ;
	rdfs:comment "device width in number of pixels or sensors" ;
	rdfs:range atom:Int ;
	lv2:minimum 1 ;
	lv2:maximum 65535 .

esp:tuio2_deviceHeight
	a lv2:Parameter ;
	rdfs:label "Device height" ;
	rdfs:comment "device height in number of pixels or sensors" ;
	rdfs:range atom:Int ;
	lv2:minimum 1 ;
	lv2:maximum 65535 .

esp:tuio2_deviceName
	a lv2:Parameter ;
	rdfs:label "Device name" ;
	rdfs:comment "device name, e.g. REAC:0@0x7F000001" ;
	rdfs:range atom:String .

esp:tuio2_octave
	a lv2:Parameter ;
	rdfs:label "Octave" ;
	rdfs:comment "reference octave for fractional MIDI mapping" ;
	rdfs:range atom:Int ;
	units:unit units:oct ;
	lv2:minimum 0 ;
	lv2:maximum 8 .

esp:tuio2_sensorsPerSemitone
	a lv2:Parameter ;
	rdfs:label "Sensors per Semitone" ;
	rdfs:comment "sensors per semitone for fractional MIDI mapping" ;
	rdfs:range atom:Int ;
	lv2:minimum 1 ;
	lv2:maximum 160 .

esp:tuio2_filterStiffness
	a lv2:Parameter ;
	rdfs:label "Filter stiffness" ;
	rdfs:comment "stiffness of IIR filter for velocity signal derivation" ;
	rdfs:range atom:Int ;
	units:unit units:frame ;
	lv2:minimum 1 ;
	lv2:maximum 128 .

# TUIO2 Input Plugin
esp:tuio2_in
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Espressivo TUIO2 In" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:espressivo ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable, log:log, xpress:voiceMap, state:threadSafeRestore ;
	lv2:requiredFeature urid:map, state:loadDefaultState ;
	lv2:extensionData state:interface ;

	lv2:port [
	# input event port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports osc:Event, patch:Message ;
		lv2:index 0 ;
		lv2:symbol "osc_in" ;
		lv2:name "OSC Input" ;
		lv2:designation lv2:control ;
	] , [
	# output event port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports xpress:Message, patch:Message ;
		lv2:index 1 ;
		lv2:symbol "event_out" ;
		lv2:name "Event Output" ;
		lv2:designation lv2:control ;
	] ;

	patch:readable
		esp:tuio2_deviceWidth ,
		esp:tuio2_deviceHeight ,
		esp:tuio2_deviceName ;

	patch:writable
		esp:tuio2_octave ,
		esp:tuio2_sensorsPerSemitone ,
		esp:tuio2_filterStiffness ;
	
	state:state [
		esp:tuio2_octave 2 ;
		esp:tuio2_sensorsPerSemitone 3 ;	
		esp:tuio2_filterStiffness 32 ;
	] .

esp:tuio2_timestampOffset
	a lv2:Parameter ;
	rdfs:label "Timestamp offset" ;
	rdfs:comment "timestamp offset of outgoing OSC bundles" ;
	rdfs:range atom:Float ;
	units:unit units:ms;
	lv2:minimum 0.0 ;
	lv2:maximum 200.0 .

# TUIO2 Output Plugin
esp:tuio2_out
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Espressivo TUIO2 Out" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:espressivo ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable, log:log, xpress:voiceMap, osc:schedule, state:threadSafeRestore ;
	lv2:requiredFeature urid:map, state:loadDefaultState ;
	lv2:extensionData state:interface ;

	lv2:port [
	# input event port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports xpress:Message, patch:Message ;
		lv2:index 0 ;
		lv2:symbol "event_in" ;
		lv2:name "Event Input" ;
		lv2:designation lv2:control ;
	] , [
	# output event port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports osc:Event, patch:Message ;
		lv2:index 1 ;
		lv2:symbol "osc_out" ;
		lv2:name "OSC Output" ;
		lv2:designation lv2:control ;
	] ;

	patch:writable
		esp:tuio2_deviceWidth ,
		esp:tuio2_deviceHeight ,
		esp:tuio2_deviceName ,
		esp:tuio2_octave ,
		esp:tuio2_sensorsPerSemitone ,
		esp:tuio2_timestampOffset ;
	
	state:state [
		esp:tuio2_deviceWidth 160 ;
		esp:tuio2_deviceHeight 1 ;
		esp:tuio2_deviceName "LV2:0@0x0" ;
		esp:tuio2_octave 2 ;
		esp:tuio2_sensorsPerSemitone 3 ;	
		esp:tuio2_timestampOffset "2.0"^^xsd:float ;	
	] .

esp:midi_range
	a lv2:Parameter ;
	rdfs:label "Bend Range" ;
	rdfs:comment "MIDI pitch bend range" ;
	rdfs:range atom:Int ;
	units:unit units:cent ;
	lv2:minimum 100 ;
	lv2:maximum 1200 .

esp:midi_cents_1
	a lv2:Parameter ;
	rdfs:label "Note 1 Offset" ;
	rdfs:comment "pitch offset for note 1" ;
	rdfs:range atom:Int ;
	units:unit units:cent ;
	lv2:minimum 0 ;
	lv2:maximum 1200 .
esp:midi_cents_2
	a lv2:Parameter ;
	rdfs:label "Note 2 Offset" ;
	rdfs:comment "pitch offset for note 2" ;
	rdfs:range atom:Int ;
	units:unit units:cent ;
	lv2:minimum 0 ;
	lv2:maximum 1200 .
esp:midi_cents_3
	a lv2:Parameter ;
	rdfs:label "Note 3 Offset" ;
	rdfs:comment "pitch offset for note 3" ;
	rdfs:range atom:Int ;
	units:unit units:cent ;
	lv2:minimum 0 ;
	lv2:maximum 1200 .
esp:midi_cents_4
	a lv2:Parameter ;
	rdfs:label "Note 4 Offset" ;
	rdfs:comment "pitch offset for note 4" ;
	rdfs:range atom:Int ;
	units:unit units:cent ;
	lv2:minimum 0 ;
	lv2:maximum 1200 .
esp:midi_cents_5
	a lv2:Parameter ;
	rdfs:label "Note 5 Offset" ;
	rdfs:comment "pitch offset for note 5" ;
	rdfs:range atom:Int ;
	units:unit units:cent ;
	lv2:minimum 0 ;
	lv2:maximum 1200 .
esp:midi_cents_6
	a lv2:Parameter ;
	rdfs:label "Note 6 Offset" ;
	rdfs:comment "pitch offset for note 6" ;
	rdfs:range atom:Int ;
	units:unit units:cent ;
	lv2:minimum 0 ;
	lv2:maximum 1200 .
esp:midi_cents_7
	a lv2:Parameter ;
	rdfs:label "Note 7 Offset" ;
	rdfs:comment "pitch offset for note 7" ;
	rdfs:range atom:Int ;
	units:unit units:cent ;
	lv2:minimum 0 ;
	lv2:maximum 1200 .
esp:midi_cents_8
	a lv2:Parameter ;
	rdfs:label "Note 8 Offset" ;
	rdfs:comment "pitch offset for note 8" ;
	rdfs:range atom:Int ;
	units:unit units:cent ;
	lv2:minimum 0 ;
	lv2:maximum 1200 .
esp:midi_cents_9
	a lv2:Parameter ;
	rdfs:label "Note 9 Offset" ;
	rdfs:comment "pitch offset for note 9" ;
	rdfs:range atom:Int ;
	units:unit units:cent ;
	lv2:minimum 0 ;
	lv2:maximum 1200 .
esp:midi_cents_10
	a lv2:Parameter ;
	rdfs:label "Note 10 Offset" ;
	rdfs:comment "pitch offset for note 10" ;
	rdfs:range atom:Int ;
	units:unit units:cent ;
	lv2:minimum 0 ;
	lv2:maximum 1200 .
esp:midi_cents_11
	a lv2:Parameter ;
	rdfs:label "Note 11 Offset" ;
	rdfs:comment "pitch offset for note 11" ;
	rdfs:range atom:Int ;
	units:unit units:cent ;
	lv2:minimum 0 ;
	lv2:maximum 1200 .
esp:midi_cents_12
	a lv2:Parameter ;
	rdfs:label "Note 12 Offset" ;
	rdfs:comment "pitch offset for note 12" ;
	rdfs:range atom:Int ;
	units:unit units:cent ;
	lv2:minimum 0 ;
	lv2:maximum 1200 .

# MIDI Input Plugin
esp:midi_in
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Espressivo MIDI In" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:espressivo ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable, log:log, xpress:voiceMap, state:threadSafeRestore ;
	lv2:requiredFeature urid:map, state:loadDefaultState ;
	lv2:extensionData state:interface ;

	lv2:port [
	# input event port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent, patch:Message ;
		lv2:index 0 ;
		lv2:symbol "osc_in" ;
		lv2:name "OSC Input" ;
		lv2:designation lv2:control ;
	] , [
	# output event port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports patch:Message, xpress:Message ;
		lv2:index 1 ;
		lv2:symbol "event_out" ;
		lv2:name "Event Output" ;
		lv2:designation lv2:control ;
	] ;

	patch:writable
		esp:midi_range ,
		esp:midi_cents_1 ,
		esp:midi_cents_2 ,
		esp:midi_cents_3 ,
		esp:midi_cents_4 ,
		esp:midi_cents_5 ,
		esp:midi_cents_6 ,
		esp:midi_cents_7 ,
		esp:midi_cents_8 ,
		esp:midi_cents_9 ,
		esp:midi_cents_10 ,
		esp:midi_cents_11 ,
		esp:midi_cents_12 ;
	
	state:state [
		esp:midi_range 200 ;
		esp:midi_cents_1 0 ;
		esp:midi_cents_2 100 ;
		esp:midi_cents_3 200 ;
		esp:midi_cents_4 300 ;
		esp:midi_cents_5 400 ;
		esp:midi_cents_6 500 ;
		esp:midi_cents_7 600 ;
		esp:midi_cents_8 700 ;
		esp:midi_cents_9 800 ;
		esp:midi_cents_10 900 ;
		esp:midi_cents_11 1000 ;
		esp:midi_cents_12 1100 ;
	] .

esp:snh_sample
	a lv2:Parameter ;
	rdfs:label "Sample" ;
	rdfs:comment "toggle to switch between sample'n'hold or release" ;
	rdfs:range atom:Bool .
esp:snh_hold_dimension_0
	a lv2:Parameter ;
	rdfs:label "Hold Dimension 0" ;
	rdfs:comment "toggle to sample'n'hold dimensions 0" ;
	rdfs:range atom:Bool .
esp:snh_hold_dimension_1
	a lv2:Parameter ;
	rdfs:label "Hold Dimension 1" ;
	rdfs:comment "toggle to sample'n'hold dimensions 1" ;
	rdfs:range atom:Bool .
esp:snh_hold_dimension_2
	a lv2:Parameter ;
	rdfs:label "Hold Dimension 2" ;
	rdfs:comment "toggle to sample'n'hold dimensions 2" ;
	rdfs:range atom:Bool .
esp:snh_hold_dimension_3
	a lv2:Parameter ;
	rdfs:label "Hold Dimension 3" ;
	rdfs:comment "toggle to sample'n'hold dimensions 3" ;
	rdfs:range atom:Bool .

# Sample and Hold Filter Plugin
esp:snh
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Espressivo Sample and Hold" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:espressivo ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable, log:log, xpress:voiceMap, state:threadSafeRestore ;
	lv2:requiredFeature urid:map, state:loadDefaultState ;
	lv2:extensionData state:interface ;

	lv2:port [
	# input event port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports patch:Message, xpress:Message ;
		lv2:index 0 ;
		lv2:symbol "event_in" ;
		lv2:name "Event Input" ;
		lv2:designation lv2:control ;
	] , [
	# output event port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports patch:Message, xpress:Message ;
		lv2:index 1 ;
		lv2:symbol "event_out" ;
		lv2:name "Event Output" ;
		lv2:designation lv2:control ;
	] ;

	patch:writable
		esp:snh_sample ,
		esp:snh_hold_dimension_0 ,
		esp:snh_hold_dimension_1 ,
		esp:snh_hold_dimension_2 ,
		esp:snh_hold_dimension_3 ;
	
	state:state [
		esp:snh_sample false ;
		esp:snh_hold_dimension_0 false ;
		esp:snh_hold_dimension_1 true ;
		esp:snh_hold_dimension_2 false ;
		esp:snh_hold_dimension_3 false ;
	] .

# Through
esp:through_zone_mask
	a lv2:Parameter ;
	rdfs:label "Zone Mask" ;
	rdfs:comment "bitmask denoting zones to let through or block" ;
	rdfs:range atom:Int ;
	lv2:parameterProperty lv2:isBitmask ;
	lv2:minimum 0 ;
	lv2:maximum 255 .
esp:through_zone_offset
	a lv2:Parameter ;
	rdfs:label "Zone Offset" ;
	rdfs:comment "offset to add to incoming zone numer" ;
	rdfs:range atom:Int ;
	lv2:minimum 0 ;
	lv2:maximum 8 .

esp:through
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Espressivo Through" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:espressivo ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable, xpress:voiceMap, state:threadSafeRestore ;
	lv2:requiredFeature urid:map, state:loadDefaultState ;
	lv2:extensionData state:interface ;

	lv2:port [
	# input event port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports patch:Message, xpress:Message ;
		lv2:index 0 ;
		lv2:symbol "event_in" ;
		lv2:name "Event Input" ;
		lv2:designation lv2:control ;
	] , [
	# output event port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports patch:Message, xpress:Message ;
		lv2:index 1 ;
		lv2:symbol "event_out" ;
		lv2:name "Event Output" ;
		lv2:designation lv2:control ;
	] ;

	patch:writable
		esp:through_zone_mask ,
		esp:through_zone_offset ;
	
	state:state [
		esp:through_zone_mask 255 ;
		esp:through_zone_offset 0 ;
	] .

# Modulator
esp:modulator_zone_mask_src
	a lv2:Parameter ;
	rdfs:label "Zone Mask Source" ;
	rdfs:comment "bitmask denoting zones to let through or block" ;
	rdfs:range atom:Int ;
	lv2:parameterProperty lv2:isBitmask ;
	lv2:minimum 0 ;
	lv2:maximum 255 .
esp:modulator_zone_mask_mod
	a lv2:Parameter ;
	rdfs:label "Zone Mask Modulator" ;
	rdfs:comment "bitmask denoting zones to use as modulator" ;
	rdfs:range atom:Int ;
	lv2:parameterProperty lv2:isBitmask ;
	lv2:minimum 0 ;
	lv2:maximum 255 .
esp:modulator_enum_src
	a lv2:Parameter ;
	rdfs:label "Enum Source" ;
	rdfs:comment "set source enum" ;
	rdfs:range atom:Int ;
	lv2:minimum 0 ;
	lv2:maximum 5 ;
	lv2:scalePoint [ rdfs:label "pitch" ; rdf:value 0 ] ;
	lv2:scalePoint [ rdfs:label "pressure" ; rdf:value 1 ] ;
	lv2:scalePoint [ rdfs:label "timbre" ; rdf:value 2 ] ;
	lv2:scalePoint [ rdfs:label "dPitch" ; rdf:value 3 ] ;
	lv2:scalePoint [ rdfs:label "dPressure" ; rdf:value 4 ] ;
	lv2:scalePoint [ rdfs:label "dTimbre" ; rdf:value 5 ] .
esp:modulator_enum_mod
	a lv2:Parameter ;
	rdfs:label "Enum Modulator" ;
	rdfs:comment "set modulator enum" ;
	rdfs:range atom:Int ;
	lv2:minimum 0 ;
	lv2:maximum 5 ;
	lv2:scalePoint [ rdfs:label "pitch" ; rdf:value 0 ] ;
	lv2:scalePoint [ rdfs:label "pressure" ; rdf:value 1 ] ;
	lv2:scalePoint [ rdfs:label "timbre" ; rdf:value 2 ] ;
	lv2:scalePoint [ rdfs:label "dPitch" ; rdf:value 3 ] ;
	lv2:scalePoint [ rdfs:label "dPressure" ; rdf:value 4 ] ;
	lv2:scalePoint [ rdfs:label "dTimbre" ; rdf:value 5 ] .
esp:modulator_zone_offset
	a lv2:Parameter ;
	rdfs:label "Zone Offset" ;
	rdfs:comment "offset to add to incoming zone numer" ;
	rdfs:range atom:Int ;
	lv2:minimum 0 ;
	lv2:maximum 8 .
esp:modulator_multiplier
	a lv2:Parameter ;
	rdfs:label "Multiplier" ;
	rdfs:comment "set value to multiply modulator with" ;
	rdfs:range atom:Float ;
	lv2:minimum -10.0 ;
	lv2:maximum 10.0 .
esp:modulator_adder
	a lv2:Parameter ;
	rdfs:label "Adder" ;
	rdfs:comment "set value to add modulator to" ;
	rdfs:range atom:Float ;
	lv2:minimum -10.0 ;
	lv2:maximum 10.0 .

esp:modulator
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Espressivo Modulator" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:espressivo ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable, xpress:voiceMap, state:threadSafeRestore ;
	lv2:requiredFeature urid:map, state:loadDefaultState ;
	lv2:extensionData state:interface ;

	lv2:port [
	# input event port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports patch:Message, xpress:Message ;
		lv2:index 0 ;
		lv2:symbol "event_in" ;
		lv2:name "Event Input" ;
		lv2:designation lv2:control ;
	] , [
	# output event port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports patch:Message, xpress:Message ;
		lv2:index 1 ;
		lv2:symbol "event_out" ;
		lv2:name "Event Output" ;
		lv2:designation lv2:control ;
	] ;

	patch:writable
		esp:modulator_zone_mask_src ,
		esp:modulator_zone_mask_mod ,
		esp:modulator_enum_src ,
		esp:modulator_enum_mod ,
		esp:modulator_zone_offset ,
		esp:modulator_multiplier ,
		esp:modulator_adder ;

	state:state [
		esp:modulator_zone_mask_src 1 ;
		esp:modulator_zone_mask_mod 2 ;
		esp:modulator_enum_src 0 ;
		esp:modulator_enum_mod 0 ;
		esp:modulator_zone_offset 0 ;	
		esp:modulator_multiplier 1.0 ;
		esp:modulator_addrr 0.0 ;	
	] .

# Chord
esp:chord_offset_1
	a lv2:Parameter ;
	rdfs:label "Offset 1" ;
	rdfs:comment "offset to base note" ;
	rdfs:range atom:Float ;
	units:unit units:semitone12TET ;
	lv2:minimum -48.0 ;
	lv2:maximum 48.0 .
esp:chord_offset_2
	a lv2:Parameter ;
	rdfs:label "Offset 2" ;
	rdfs:comment "offset to base note" ;
	rdfs:range atom:Float ;
	units:unit units:semitone12TET ;
	lv2:minimum -48.0 ;
	lv2:maximum 48.0 .
esp:chord_offset_3
	a lv2:Parameter ;
	rdfs:label "Offset 3" ;
	rdfs:comment "offset to base note" ;
	rdfs:range atom:Float ;
	units:unit units:semitone12TET ;
	lv2:minimum -48.0 ;
	lv2:maximum 48.0 .
esp:chord_offset_4
	a lv2:Parameter ;
	rdfs:label "Offset 4" ;
	rdfs:comment "offset to base note" ;
	rdfs:range atom:Float ;
	units:unit units:semitone12TET ;
	lv2:minimum -48.0 ;
	lv2:maximum 48.0 .

esp:chord
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Espressivo Chord" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:espressivo ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable, xpress:voiceMap, state:threadSafeRestore ;
	lv2:requiredFeature urid:map, state:loadDefaultState ;
	lv2:extensionData state:interface ;

	lv2:port [
	# input event port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports patch:Message, xpress:Message ;
		lv2:index 0 ;
		lv2:symbol "event_in" ;
		lv2:name "Event Input" ;
		lv2:designation lv2:control ;
	] , [
	# output event port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports patch:Message, xpress:Message ;
		lv2:index 1 ;
		lv2:symbol "event_out" ;
		lv2:name "Event Output" ;
		lv2:designation lv2:control ;
	] ;

	patch:writable
		esp:chord_offset_1 ,
		esp:chord_offset_2 ,
		esp:chord_offset_3 ,
		esp:chord_offset_4 ;
	
	state:state [
		esp:chord_offset_1 "0.0"^^xsd:float ;
		esp:chord_offset_2 "4.0"^^xsd:float ;
		esp:chord_offset_3 "7.0"^^xsd:float ;
		esp:chord_offset_4 "12.0"^^xsd:float ;
	] .

# Reducto
esp:reducto_position_threshold
	a lv2:Parameter ;
	rdfs:label "Position threshold" ;
	rdfs:comment "threshold of position change to trigger new events" ;
	rdfs:range atom:Float ;
	units:unit units:semitone12TET ;
	lv2:minimum 0.0 ;
	lv2:maximum 127.0 .
esp:reducto_velocity_threshold
	a lv2:Parameter ;
	rdfs:label "Velocity threshold" ;
	rdfs:comment "threshold of velocity change to trigger new events" ;
	rdfs:range atom:Float ;
	lv2:minimum 0.0 ;
	lv2:maximum 10.0 .

esp:reducto
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Espressivo Reducto" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:espressivo ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable, xpress:voiceMap, state:threadSafeRestore ;
	lv2:requiredFeature urid:map, state:loadDefaultState ;
	lv2:extensionData state:interface ;

	lv2:port [
	# input event port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports patch:Message, xpress:Message ;
		lv2:index 0 ;
		lv2:symbol "event_in" ;
		lv2:name "Event Input" ;
		lv2:designation lv2:control ;
	] , [
	# output event port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports patch:Message, xpress:Message ;
		lv2:index 1 ;
		lv2:symbol "event_out" ;
		lv2:name "Event Output" ;
		lv2:designation lv2:control ;
	] ;

	patch:writable
		esp:reducto_position_threshold ,
		esp:reducto_velocity_threshold ;
	
	state:state [
		esp:reducto_position_threshold "1.0"^^xsd:float ;
		esp:reducto_velocity_threshold "0.2"^^xsd:float ;
	] .

# Discreto
esp:discreto_position_order
	a lv2:Parameter ;
	rdfs:label "Position Order" ;
	rdfs:comment "variable denoting position dependence of discrete mapping" ;
	rdfs:range atom:Int ;
	lv2:minimum 0 ;
	lv2:maximum 10 .
esp:discreto_velocity_order
	a lv2:Parameter ;
	rdfs:label "Velocity Order" ;
	rdfs:comment "variable denoting velocity dependence of discrete mapping" ;
	rdfs:range atom:Int ;
	lv2:minimum 0 ;
	lv2:maximum 10 .

esp:discreto
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Espressivo Discreto" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:espressivo ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable, xpress:voiceMap, state:threadSafeRestore ;
	lv2:requiredFeature urid:map, state:loadDefaultState ;
	lv2:extensionData state:interface ;

	lv2:port [
	# input event port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports patch:Message, xpress:Message ;
		lv2:index 0 ;
		lv2:symbol "event_in" ;
		lv2:name "Event Input" ;
		lv2:designation lv2:control ;
	] , [
	# output event port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports patch:Message, xpress:Message ;
		lv2:index 1 ;
		lv2:symbol "event_out" ;
		lv2:name "Event Output" ;
		lv2:designation lv2:control ;
	] ;

	patch:writable
		esp:discreto_position_order ,
		esp:discreto_velocity_order ;
	
	state:state [
		esp:discreto_position_order 1 ;
		esp:discreto_velocity_order 0 ;
	] .

esp:sc_synth_name_0
	a lv2:Parameter ;
	rdfs:label "Synth Name 0" ;
	rdfs:comment "name of synth voice for zone 0" ;
	rdfs:range atom:String .
esp:sc_synth_name_1
	a lv2:Parameter ;
	rdfs:label "Synth Name 1" ;
	rdfs:comment "name of synth voice for zone 1" ;
	rdfs:range atom:String .
esp:sc_synth_name_2
	a lv2:Parameter ;
	rdfs:label "Synth Name 2" ;
	rdfs:comment "name of synth voice for zone 2" ;
	rdfs:range atom:String .
esp:sc_synth_name_3
	a lv2:Parameter ;
	rdfs:label "Synth Name 3" ;
	rdfs:comment "name of synth voice for zone 3" ;
	rdfs:range atom:String .
esp:sc_synth_name_4
	a lv2:Parameter ;
	rdfs:label "Synth Name 4" ;
	rdfs:comment "name of synth voice for zone 4" ;
	rdfs:range atom:String .
esp:sc_synth_name_5
	a lv2:Parameter ;
	rdfs:label "Synth Name 5" ;
	rdfs:comment "name of synth voice for zone 5" ;
	rdfs:range atom:String .
esp:sc_synth_name_6
	a lv2:Parameter ;
	rdfs:label "Synth Name 6" ;
	rdfs:comment "name of synth voice for zone 6" ;
	rdfs:range atom:String .
esp:sc_synth_name_7
	a lv2:Parameter ;
	rdfs:label "Synth Name 7" ;
	rdfs:comment "name of synth voice for zone 7" ;
	rdfs:range atom:String .

esp:sc_out_offset
	a lv2:Parameter ;
	rdfs:label "Out Offset" ;
	rdfs:comment "offset into output audio buffer array" ;
	rdfs:range atom:Int ;
	lv2:minimum 0 ;
	lv2:maximum 8 .
esp:sc_gid_offset
	a lv2:Parameter ;
	rdfs:label "GID Offset" ;
	rdfs:comment "offset into group ID array" ;
	rdfs:range atom:Int ;
	lv2:minimum 0 ;
	lv2:maximum 10000 .
esp:sc_sid_offset
	a lv2:Parameter ;
	rdfs:label "SID Offset" ;
	rdfs:comment "offset into synth ID array" ;
	rdfs:range atom:Int ;
	lv2:minimum 0 ;
	lv2:maximum 10000 .
esp:sc_sid_wrap
	a lv2:Parameter ;
	rdfs:label "SID Wrap" ;
	rdfs:comment "number to wrap synth IDs around" ;
	rdfs:range atom:Int ;
	lv2:minimum 0 ;
	lv2:maximum 10000 .
esp:sc_arg_offset
	a lv2:Parameter ;
	rdfs:label "Argument Offset" ;
	rdfs:comment "offset into argument list" ;
	rdfs:range atom:Int ;
	lv2:minimum 0 ;
	lv2:maximum 4 .
esp:sc_allocate
	a lv2:Parameter ;
	rdfs:label "Allocate" ;
	rdfs:comment "toggle to allocate new synth voice" ;
	rdfs:range atom:Bool .
esp:sc_gate
	a lv2:Parameter ;
	rdfs:label "Gate" ;
	rdfs:comment "toggle to trigger gate parameter or not" ;
	rdfs:range atom:Bool .
esp:sc_group
	a lv2:Parameter ;
	rdfs:label "Group" ;
	rdfs:comment "toggle to send messages to group ID or synth ID" ;
	rdfs:range atom:Bool .

# SuperCollider Plugin
esp:sc_out
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Espressivo SuperCollider Out" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:espressivo ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable, osc:schedule, xpress:voiceMap, state:threadSafeRestore ;
	lv2:requiredFeature urid:map, state:loadDefaultState ;
	lv2:extensionData state:interface ;

	# input event port
	lv2:port [
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports patch:Message, xpress:Message ;
		lv2:index 0 ;
		lv2:symbol "event_in" ;
		lv2:name "Event Input" ;
		lv2:designation lv2:control ;
	] , [
	# output osc port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports patch:Message, osc:Event ;
		lv2:index 1 ;
		lv2:symbol "osc_out" ;
		lv2:name "OSC Output" ;
		lv2:designation lv2:control ;
	] ;

	patch:writable
		esp:sc_synth_name_0 ,
		esp:sc_synth_name_1 ,
		esp:sc_synth_name_2 ,
		esp:sc_synth_name_3 ,
		esp:sc_synth_name_4 ,
		esp:sc_synth_name_5 ,
		esp:sc_synth_name_6 ,
		esp:sc_synth_name_7 ,
		esp:sc_out_offset ,
		esp:sc_gid_offset ,
		esp:sc_sid_offset ,
		esp:sc_sid_wrap ,
		esp:sc_arg_offset ,
		esp:sc_allocate ,
		esp:sc_gate ,
		esp:sc_group ;

	state:state [
		esp:sc_synth_name_0 "synth_0" ;
		esp:sc_synth_name_1 "synth_1" ;
		esp:sc_synth_name_2 "synth_2" ;
		esp:sc_synth_name_3 "synth_3" ;
		esp:sc_synth_name_4 "synth_4" ;
		esp:sc_synth_name_5 "synth_5" ;
		esp:sc_synth_name_6 "synth_6" ;
		esp:sc_synth_name_7 "synth_7" ;
		esp:sc_out_offset 0 ;
		esp:sc_gid_offset 100 ;
		esp:sc_sid_offset 200 ;
		esp:sc_sid_wrap 0 ;
		esp:sc_arg_offset 0 ;
		esp:sc_allocate true ;
		esp:sc_gate true ;
		esp:sc_group false ;
	] .

esp:pitchExp
	a lv2:Parameter ;
	rdfs:label "Pitch sqew" ;
	rdfs:comment "set sqew for pitch mapping function" ;
	lv2:minimum -3.0 ;
	lv2:maximum 3.0 ;
	rdfs:range atom:Float .
esp:pressureExp
	a lv2:Parameter ;
	rdfs:label "Pressure sqew" ;
	rdfs:comment "set sqew for pressure mapping function" ;
	lv2:minimum -3.0 ;
	lv2:maximum 3.0 ;
	rdfs:range atom:Float .
esp:timbreExp
	a lv2:Parameter ;
	rdfs:label "Timbre sqew" ;
	rdfs:comment "set sqew for timbre mapping function" ;
	lv2:minimum -3.0 ;
	lv2:maximum 3.0 ;
	rdfs:range atom:Float .
esp:dPitchExp
	a lv2:Parameter ;
	rdfs:label "dPitch sqew" ;
	rdfs:comment "set sqew for dPitch mapping function" ;
	lv2:minimum -3.0 ;
	lv2:maximum 3.0 ;
	rdfs:range atom:Float .
esp:dPressureExp
	a lv2:Parameter ;
	rdfs:label "dPressure sqew" ;
	rdfs:comment "set sqew for dPressure mapping function" ;
	lv2:minimum -3.0 ;
	lv2:maximum 3.0 ;
	rdfs:range atom:Float .
esp:dTimbreExp
	a lv2:Parameter ;
	rdfs:label "dTimbre sqew" ;
	rdfs:comment "set sqew for dTimbre mapping function" ;
	lv2:minimum -3.0 ;
	lv2:maximum 3.0 ;
	rdfs:range atom:Float .

# Sqew Plugin
esp:sqew
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Espressivo Sqew" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:espressivo ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable, xpress:voiceMap, state:threadSafeRestore ;
	lv2:requiredFeature urid:map, state:loadDefaultState ;
	lv2:extensionData state:interface ;

	# input event port
	lv2:port [
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports patch:Message, xpress:Message ;
		lv2:index 0 ;
		lv2:symbol "event_in" ;
		lv2:name "Event Input" ;
		lv2:designation lv2:control ;
	] , [
	# output osc port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports patch:Message, xpress:Message ;
		lv2:index 1 ;
		lv2:symbol "event_out" ;
		lv2:name "Event Output" ;
		lv2:designation lv2:control ;
	] ;

	patch:writable
		esp:pitchExp ,
		esp:pressureExp ,
		esp:timbreExp ,
		esp:dPitchExp ,
		esp:dPressureExp ,
		esp:dTimbreExp ;

	state:state [
		esp:pitchExp "0.0"^^xsd:float ;
		esp:pressureExp "0.0"^^xsd:float ;
		esp:timbreExp "0.0"^^xsd:float ;
		esp:dPitchExp "0.0"^^xsd:float ;
		esp:dPressureExp "0.0"^^xsd:float ;
		esp:dTimbreExp "0.0"^^xsd:float ;
	] .

# Monitor Plugin
esp:monitor_out
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Espressivo Monitor Out" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:espressivo ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable, log:log, xpress:voiceMap, state:threadSafeRestore ;
	lv2:requiredFeature urid:map, state:loadDefaultState ;
	lv2:extensionData state:interface ;

	# input event port
	lv2:port [
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports patch:Message, xpress:Message ;
		lv2:index 0 ;
		lv2:symbol "event_in" ;
		lv2:name "Event Input" ;
		lv2:designation lv2:control ;
	] , [
	# output osc port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports patch:Message ;
		lv2:index 1 ;
		lv2:symbol "event_out" ;
		lv2:name "Event Output" ;
		lv2:designation lv2:control ;
	] ;

	state:state [
	] .
